#!/usr/bin/env bash

set -ueo pipefail

set +u
AWS_ACCOUNT_ID="$1"
AWS_REGION="$2"
set -u

function hash_package() {
  local hash

  if [[ "$OSTYPE" == "darwin"* ]]; then
    hash=$(shasum -a 256 "$1" | awk '{ print $1 }')
  else
    hash=$(sha256sum "$1" | awk '{ print $1 }')
  fi

  echo "$hash"
}

function set_timestamp() {
  local touch_cmd
  touch_cmd="touch"

  if [[ "$OSTYPE" == "darwin"* ]]; then
    touch_cmd="gtouch"
  fi

  # Use a fixed date to make reproducible bundles
  $touch_cmd --no-dereference --date='2020-08-31 00:00:00' "$1"
}

if [[ -z "$AWS_ACCOUNT_ID" || -z "$AWS_REGION" ]]; then
  echo -e "Usage ./scripts/package.sh <AWS account ID> <AWS region>\n\ne.g.: ./scripts/package.sh 123456789012 eu-west-1"
  exit 1
fi

echo "Cleaning build directory..."
rm -rf build

echo "Ensuring code compiles..."
yarn compile

echo "Cleaning bundle code..."
rm -rf packaging

echo "Bundling code..."
yarn esbuild \
  --bundle \
  --external:@aws-sdk'*' \
  --external:@aws-lambda-powertools'*' \
  --minify \
  --outdir=packaging \
  --platform=node \
  --sourcemap \
  --target=es2021 \
  --sourcemap=inline \
  src/handlers/*/index.ts

LAMBDAS=""

echo "Packaging Lambda function..."
cd packaging
for BUNDLE in *; do
  cd "$BUNDLE"
  set_timestamp index.js
  zip --latest-time package.zip index.js
  PACKAGE_HASH=$(hash_package package.zip)
  FINAL_PACKAGE_PATH="package-${PACKAGE_HASH}.zip"
  mv package.zip "$FINAL_PACKAGE_PATH"
  echo "Created $FINAL_PACKAGE_PATH for $BUNDLE"
  echo "Uploading..."
  aws s3 cp "$FINAL_PACKAGE_PATH" "s3://automate-aws-access-removal-${AWS_ACCOUNT_ID}-${AWS_REGION}/${FINAL_PACKAGE_PATH}"
  echo "Uploaded $FINAL_PACKAGE_PATH"
  cd ..

  LAMBDA=$(cat <<EOF
    "${BUNDLE}" = {
      s3_key = "${FINAL_PACKAGE_PATH}"
      source_code_hash = "$(echo -n "$PACKAGE_HASH" | xxd -revert -plain | base64)"
    }
EOF
)

  if [[ -z "$LAMBDAS" ]]; then
    LAMBDAS="$LAMBDA"
  else
    LAMBDAS="$LAMBDAS
    $LAMBDA"
  fi
done

cd ..

cat << EOF > ../infrastructure/main.auto.tfvars
# Generated by lambda/scripts/package.sh - do not manually edit

lambdas = {
  ${LAMBDAS}
}
EOF

terraform fmt ../infrastructure/main.auto.tfvars
